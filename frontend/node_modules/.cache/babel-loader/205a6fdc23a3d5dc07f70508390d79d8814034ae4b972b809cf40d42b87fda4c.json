{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abuza\\\\Desktop\\\\Fiver\\\\Admin Dashboard\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI, apiHelpers } from '../utils/api';\nimport { toast } from 'react-toastify';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGOUT: 'LOGOUT',\n  SET_ERROR: 'SET_ERROR',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Check authentication status\n  const checkAuthStatus = async () => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await authAPI.getProfile();\n      const userData = apiHelpers.formatResponse(response);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: userData.user\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authAPI.login(credentials);\n      const data = apiHelpers.formatResponse(response);\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: data.user\n      });\n      apiHelpers.showSuccess(data.message || 'Login successful');\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      const errorMessage = apiHelpers.handleError(error, 'Login failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      apiHelpers.showSuccess('Logged out successfully');\n    } catch (error) {\n      // Even if logout fails on server, clear local state\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      apiHelpers.handleError(error, 'Logout failed');\n    }\n  };\n\n  // Register function (admin only)\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authAPI.register(userData);\n      const data = apiHelpers.formatResponse(response);\n      apiHelpers.showSuccess(data.message || 'User registered successfully');\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      const errorMessage = apiHelpers.handleError(error, 'Registration failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // Update profile function\n  const updateProfile = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      dispatch({\n        type: AUTH_ACTIONS.CLEAR_ERROR\n      });\n      const response = await authAPI.updateProfile(userData);\n      const data = apiHelpers.formatResponse(response);\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: data.user\n      });\n      apiHelpers.showSuccess(data.message || 'Profile updated successfully');\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      const errorMessage = apiHelpers.handleError(error, 'Profile update failed');\n      dispatch({\n        type: AUTH_ACTIONS.SET_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    var _state$user;\n    return ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.role) === 'admin';\n  };\n\n  // Check if user has permission\n  const hasPermission = (requiredRole = 'user') => {\n    if (!state.isAuthenticated) return false;\n    if (requiredRole === 'user') return true;\n    if (requiredRole === 'admin') return isAdmin();\n    return false;\n  };\n\n  // Context value\n  const value = {\n    // State\n    user: state.user,\n    isAuthenticated: state.isAuthenticated,\n    isLoading: state.isLoading,\n    error: state.error,\n    // Actions\n    login,\n    logout,\n    register,\n    updateProfile,\n    clearError,\n    checkAuthStatus,\n    // Utilities\n    isAdmin,\n    hasPermission\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","apiHelpers","toast","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","isLoading","error","AUTH_ACTIONS","SET_LOADING","LOGIN_SUCCESS","LOGOUT","SET_ERROR","UPDATE_USER","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","checkAuthStatus","response","getProfile","userData","formatResponse","login","credentials","data","showSuccess","message","success","errorMessage","handleError","logout","register","updateProfile","clearError","isAdmin","_state$user","role","hasPermission","requiredRole","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/abuza/Desktop/Fiver/Admin Dashboard/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI, apiHelpers } from '../utils/api';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n  error: null,\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGOUT: 'LOGOUT',\r\n  SET_ERROR: 'SET_ERROR',\r\n  UPDATE_USER: 'UPDATE_USER',\r\n  CLEAR_ERROR: 'CLEAR_ERROR',\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n\r\n    case AUTH_ACTIONS.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isLoading: false,\r\n      };\r\n\r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n\r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext(null);\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Check authentication status\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      const response = await authAPI.getProfile();\r\n      const userData = apiHelpers.formatResponse(response);\r\n      \r\n      dispatch({ \r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS, \r\n        payload: userData.user \r\n      });\r\n    } catch (error) {\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authAPI.login(credentials);\r\n      const data = apiHelpers.formatResponse(response);\r\n\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.LOGIN_SUCCESS, \r\n        payload: data.user \r\n      });\r\n\r\n      apiHelpers.showSuccess(data.message || 'Login successful');\r\n      return { success: true, user: data.user };\r\n    } catch (error) {\r\n      const errorMessage = apiHelpers.handleError(error, 'Login failed');\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.SET_ERROR, \r\n        payload: errorMessage \r\n      });\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await authAPI.logout();\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n      apiHelpers.showSuccess('Logged out successfully');\r\n    } catch (error) {\r\n      // Even if logout fails on server, clear local state\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n      apiHelpers.handleError(error, 'Logout failed');\r\n    }\r\n  };\r\n\r\n  // Register function (admin only)\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authAPI.register(userData);\r\n      const data = apiHelpers.formatResponse(response);\r\n\r\n      apiHelpers.showSuccess(data.message || 'User registered successfully');\r\n      return { success: true, user: data.user };\r\n    } catch (error) {\r\n      const errorMessage = apiHelpers.handleError(error, 'Registration failed');\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.SET_ERROR, \r\n        payload: errorMessage \r\n      });\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Update profile function\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n\r\n      const response = await authAPI.updateProfile(userData);\r\n      const data = apiHelpers.formatResponse(response);\r\n\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.UPDATE_USER, \r\n        payload: data.user \r\n      });\r\n\r\n      apiHelpers.showSuccess(data.message || 'Profile updated successfully');\r\n      return { success: true, user: data.user };\r\n    } catch (error) {\r\n      const errorMessage = apiHelpers.handleError(error, 'Profile update failed');\r\n      dispatch({ \r\n        type: AUTH_ACTIONS.SET_ERROR, \r\n        payload: errorMessage \r\n      });\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Clear error function\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return state.user?.role === 'admin';\r\n  };\r\n\r\n  // Check if user has permission\r\n  const hasPermission = (requiredRole = 'user') => {\r\n    if (!state.isAuthenticated) return false;\r\n    if (requiredRole === 'user') return true;\r\n    if (requiredRole === 'admin') return isAdmin();\r\n    return false;\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    // State\r\n    user: state.user,\r\n    isAuthenticated: state.isAuthenticated,\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n\r\n    // Actions\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    clearError,\r\n    checkAuthStatus,\r\n\r\n    // Utilities\r\n    isAdmin,\r\n    hasPermission,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}